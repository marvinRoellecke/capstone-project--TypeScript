import styled from "styled-components";
import { useState } from "react";
import Head from "next/head";
import Header from "../../components/Header/Header";
import Footer from "../../components/Footer/Footer";
import InputText from "../../components/InputText/InputText";

export default function NewEntryForm() {
  function handleSubmit(event) {
    event.preventDefault();
    const form = event.target.elements;
    const title = form.title.value;
    const info = {
      sport: form.sport.value,
      numberOfCourts: Number(form.numberOfCourts.value),
      surface: form.surface.value,
    };
    const address = {
      street: form.street.value,
      houseNumber: Number(form.houseNumber.value),
      postcode: Number(form.postcode.value),
      city: form.city.value,
    };
    const infrastructure = {
      lighting: form.lighting.checked,
      wheelchair: form.wheelchair.checked,
    };
    const outdoor = form.outdoor.checked;
    const isPublic = form.isPublic.checked;

    const newLocation = {
      title: title,
      info: info,
      address: address,
      infrastructure: infrastructure,
      outdoor: outdoor,
      public: isPublic,
    };

    //onCreateNewLocation(newLocation);
    console.log(newLocation);
    //event.target.reset();
    form.title.focus();
  }

  return (
    <>
      <Head>
        <title>new entry</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <StyledMobileLayout>
        <Header addLocation />
        <main>
          <StyledForm aria-labelledby="formTitle" onSubmit={handleSubmit}>
            <fieldset>
              <legend>Allgemeine Infos</legend>
              <InputText type="text" id="title" label="Titel" />
            </fieldset>
            <fieldset>
              <legend>Sportplatz</legend>
              <label htmlFor="sport">Sportart</label>
              <select name="sport" id="sport" required>
                <option value="">-- Sportart --</option>
                <option value="american football">American Football</option>
                <option value="basketball">Basketball</option>
                <option value="fitness">Fitness</option>
                <option value="fussball">Fussball</option>
                <option value="skateboard">Skateboard</option>
                <option value="tennis">Tennis</option>
                <option value="tischtennis">Tischtennis</option>
                <option value="volleyball">Volleyball</option>
              </select>
              <InputText
                type="number"
                id="numberOfCourts"
                label="Anzahl an Plätzen"
              />

              <label htmlFor="surface">Untergrund</label>
              <select name="surface" id="surface">
                <option value="">-- Untergrund --</option>
                <option value="ash">Asche</option>
                <option value="beton">Beton</option>
                <option value="rubber">Kunststoff</option>
                <option value="green">Rasen</option>
              </select>
            </fieldset>
            <fieldset>
              <legend>Adresse</legend>
              <InputText type="text" id="street" label="Straße" />
              <InputText type="number" id="houseNumber" label="Hausnummer" />
              <InputText type="number" id="postcode" label="Postleitzahl" />
              <InputText type="text" id="city" label="Stadt" />
            </fieldset>
            <fieldset>
              <legend>Infrastruktur</legend>
              <input type="checkbox" name="lighting" id="lighting" />
              <label htmlFor="lighting">Beleuchtung</label>
              <input type="checkbox" name="wheelchair" id="wheelchair" />
              <label htmlFor="wheelchair">Barrierefreiheit</label>
            </fieldset>
            <fieldset>
              <legend>Weitere Infos</legend>
              <input type="checkbox" name="outdoor" id="outdoor" />
              <label htmlFor="outdoor">draußen</label>
              <input type="checkbox" name="isPublic" id="isPublic" />
              <label htmlFor="isPublic">öffentlich</label>
            </fieldset>
            <button type="submit">Abschicken</button>
          </StyledForm>
        </main>
        <Footer atNewEntryForm />
      </StyledMobileLayout>
    </>
  );
}

const StyledMobileLayout = styled.div`
  display: grid;
  grid-template-rows: 4rem auto 4rem;
  height: 100vh;

  main {
    overflow-y: scroll;
  }
`;

const StyledForm = styled.form`
  * {
    display: grid;
    margin: 0.5rem;
  }

  input {
    padding: 0.5rem 1rem;
  }
`;

const StyledFieldWrapper = styled.div`
  position: relative;
`;
const StyledLabel = styled.label`
  position: absolute;
  left: 0;
  top: 10px;
  color: #999;
  background-color: #fff;
  z-index: 10;
  transition: transform 150ms ease-out, font-size 150ms ease-out;
`;

const StyledInput = styled.input`
  position: relative;
  padding: 12px 0px 5px 0;
  width: 100%;
  outline: 0;
  border: 0;
  box-shadow: 0 1px 0 0 #e5e5e5;
  transition: box-shadow 150ms ease-out;

  &:focus {
    box-shadow: 0 2px 0 0 green;
  }
`;

/* 
  function handleMoveLabelUp() {
    setIsFocused(true);
  }

  function handleMoveLabelDown(event) {
    console.log(event);
    if (event.target.value === "") {
      setIsFocused(false);
    }
  }

  const [isFocused, setIsFocused] = useState(false);


<StyledFieldWrapper>
<StyledLabel isFocused={isFocused} htmlFor="title">
  Titel
</StyledLabel>
<StyledInput
  type="text"
  name="title"
  id="title"
  onFocus={handleMoveLabelUp}
  onBlur={handleMoveLabelDown}
  required
/>
</StyledFieldWrapper>


  transform: ${(props) => props.isFocused && "translateY(-125%)"};
  font-size: ${(props) => props.isFocused && "0.75em"};
 */
