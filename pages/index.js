import styled from "styled-components";
import Head from "next/head";
import Header from "../components/Header/Header";
import Main from "../components/Main/Main";
import Footer from "../components/Footer/Footer";
import FilterMenu from "../components/FilterMenu/FilterMenu";
import { useState, useEffect } from "react";
import sportLocationsData from "../lib/data/sportLocationsData";

export default function Home({
  locations,
  onToggleFavorite,
  favorites,
  setLocations,
}) {
  const [filterData, setFilterData] = useState({
    sport: {
      basketball: false,
      fitness: false,
      other: false,
      soccer: false,
      tennis: false,
      volleyball: false,
    },
    city: { Münster: false, Düsseldorf: false },
    rating: { 1: false, 2: false, 3: false, 4: false, 5: false },
  });

  const [sportLocationsData, setSportLocationsData] = useState([]);

  async function getLocations() {
    const response = await fetch("/api/locations");
    const noteList = await response.json();
    setSportLocationsData(noteList);
  }

  useEffect(() => {
    getLocations();
  }, []);

  function handleFilter(event, category) {
    if (event.target.checked) {
      setFilterData({
        ...filterData,
        [category]: { ...filterData[category], [event.target.value]: true },
      });
    } else {
      setFilterData({
        ...filterData,
        [category]: { ...filterData[category], [event.target.value]: false },
      });
    }
  }

  //show / hide Filter Menu
  const [isShowingFilterMenu, setIsShowingFilterMenu] = useState(false);

  function handleShowFilterMenu() {
    setIsShowingFilterMenu(!isShowingFilterMenu);
  }

  //sort function
  function handleChangeSort(event) {
    if (event === "az") {
      setLocations(
        [...locations].sort((a, b) => {
          const nameA = a.title.toLowerCase();
          const nameB = b.title.toLowerCase();
          if (nameA < nameB) {
            return -1;
          }
          if (nameA > nameB) {
            return 1;
          }
          return 0;
        })
      );
    } else if (event === "za") {
      setLocations(
        [...locations].sort((a, b) => {
          const nameA = a.title.toLowerCase();
          const nameB = b.title.toLowerCase();
          if (nameA < nameB) {
            return 1;
          }
          if (nameA > nameB) {
            return -1;
          }
          return 0;
        })
      );
    } else if (event === "toOld") {
      setLocations([...sportLocationsData].reverse());
    } else if (event === "toNew") {
      setLocations([...sportLocationsData]);
    }
  }

  return (
    <>
      <Head>
        <title>localSports</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <StyledMobileLayout>
        <Header onShowFilterMenu={handleShowFilterMenu} filterMenu />
        <Main
          locations={locations}
          filterData={filterData}
          onToggleFavorite={onToggleFavorite}
          favorites={favorites}
        />
        {isShowingFilterMenu && (
          <FilterMenu
            onShowFilterMenu={handleShowFilterMenu}
            onChangeSort={handleChangeSort}
            onFilter={handleFilter}
            filterData={filterData}
          />
        )}
        <Footer atHomePage />
      </StyledMobileLayout>
    </>
  );
}

const StyledMobileLayout = styled.div`
  display: grid;
  grid-template-rows: 4rem auto 4rem;
  height: 100vh;

  main {
    overflow-y: scroll;
  }
`;
